// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.InteropServices;
using ImGuiID = System.UInt32;
using ImTextureID = System.IntPtr;
using ImDrawIdx = System.UInt16;
using ImGuiCol = System.Int32;
using ImGuiCond = System.Int32;
using ImGuiDir = System.Int32;
using ImGuiKey = System.Int32;
using ImGuiStyleVar = System.Int32;
using ImGuiSortDirection = System.Int32;
using ImGuiDataAuthority = System.Int32;
using ImGuiLayoutType = System.Int32;
using ImGuiMouseCursor = System.Int32;
using ImPoolIdx = System.Int32;
using ImGuiTableColumnIdx = System.SByte;
using ImGuiTableDrawChannelIdx = System.Byte;
using ImFileHandle = System.IntPtr;
using ImVec1 = System.Single;
using ImVec2 = System.Numerics.Vector2;
using ImVec3 = System.Numerics.Vector3;
using ImVec4 = System.Numerics.Vector4;
using ImColor = System.Numerics.Vector4;

namespace SharpImGUI
{
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTableCellData
	{
		public uint BgColor;
		public ImGuiTableColumnIdx Column;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiViewportP
	{
		public ImGuiViewport _ImGuiViewport;
		public int Idx;
		public int LastFrameActive;
		public int LastFrontMostStampCount;
		public ImGuiID LastNameHash;
		public ImVec2 LastPos;
		public float Alpha;
		public float LastAlpha;
		public short PlatformMonitor;
		public bool PlatformWindowCreated;
		public unsafe ImGuiWindow* Window;
		public unsafe fixed int DrawListsLastFrame[2];
		public unsafe ImDrawList* DrawLists_0;
		public unsafe ImDrawList* DrawLists_1;
		public ImDrawData DrawDataP;
		public ImDrawDataBuilder DrawDataBuilder;
		public ImVec2 LastPlatformPos;
		public ImVec2 LastPlatformSize;
		public ImVec2 LastRendererSize;
		public ImVec2 WorkOffsetMin;
		public ImVec2 WorkOffsetMax;
		public ImVec2 CurrWorkOffsetMin;
		public ImVec2 CurrWorkOffsetMax;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiViewport
	{
		public ImGuiID ID;
		public ImGuiViewportFlags Flags;
		public ImVec2 Pos;
		public ImVec2 Size;
		public ImVec2 WorkPos;
		public ImVec2 WorkSize;
		public float DpiScale;
		public ImGuiID ParentViewportId;
		public unsafe ImDrawData* DrawData;
		public IntPtr RendererUserData;
		public IntPtr PlatformUserData;
		public IntPtr PlatformHandle;
		public IntPtr PlatformHandleRaw;
		public bool PlatformRequestMove;
		public bool PlatformRequestResize;
		public bool PlatformRequestClose;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawData
	{
		public bool Valid;
		public int CmdListsCount;
		public int TotalIdxCount;
		public int TotalVtxCount;
		public unsafe ImDrawList** CmdLists;
		public ImVec2 DisplayPos;
		public ImVec2 DisplaySize;
		public ImVec2 FramebufferScale;
		public unsafe ImGuiViewport* OwnerViewport;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawList
	{
		public ImVector<ImDrawCmd> CmdBuffer;
		public ImVector<ImDrawIdx> IdxBuffer;
		public ImVector<ImDrawVert> VtxBuffer;
		public ImDrawListFlags Flags;
		public uint _VtxCurrentIdx;
		public unsafe ImDrawListSharedData* _Data;
		public unsafe byte* _OwnerName;
		public unsafe ImDrawVert* _VtxWritePtr;
		public unsafe ImDrawIdx* _IdxWritePtr;
		public ImVector<ImVec4> _ClipRectStack;
		public ImVector<ImTextureID> _TextureIdStack;
		public ImVector<ImVec2> _Path;
		public ImDrawCmdHeader _CmdHeader;
		public ImDrawListSplitter _Splitter;
		public float _FringeScale;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawCmd
	{
		public ImVec4 ClipRect;
		public ImTextureID TextureId;
		public uint VtxOffset;
		public uint IdxOffset;
		public uint ElemCount;
		public IntPtr UserCallback;
		public IntPtr UserCallbackData;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawVert
	{
		public ImVec2 pos;
		public ImVec2 uv;
		public uint col;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawListSharedData
	{
		public ImVec2 TexUvWhitePixel;
		public unsafe ImFont* Font;
		public float FontSize;
		public float CurveTessellationTol;
		public float CircleSegmentMaxError;
		public ImVec4 ClipRectFullscreen;
		public ImDrawListFlags InitialFlags;
		public ImVec2 ArcFastVtx_0;
		public ImVec2 ArcFastVtx_1;
		public ImVec2 ArcFastVtx_2;
		public ImVec2 ArcFastVtx_3;
		public ImVec2 ArcFastVtx_4;
		public ImVec2 ArcFastVtx_5;
		public ImVec2 ArcFastVtx_6;
		public ImVec2 ArcFastVtx_7;
		public ImVec2 ArcFastVtx_8;
		public ImVec2 ArcFastVtx_9;
		public ImVec2 ArcFastVtx_10;
		public ImVec2 ArcFastVtx_11;
		public ImVec2 ArcFastVtx_12;
		public ImVec2 ArcFastVtx_13;
		public ImVec2 ArcFastVtx_14;
		public ImVec2 ArcFastVtx_15;
		public ImVec2 ArcFastVtx_16;
		public ImVec2 ArcFastVtx_17;
		public ImVec2 ArcFastVtx_18;
		public ImVec2 ArcFastVtx_19;
		public ImVec2 ArcFastVtx_20;
		public ImVec2 ArcFastVtx_21;
		public ImVec2 ArcFastVtx_22;
		public ImVec2 ArcFastVtx_23;
		public ImVec2 ArcFastVtx_24;
		public ImVec2 ArcFastVtx_25;
		public ImVec2 ArcFastVtx_26;
		public ImVec2 ArcFastVtx_27;
		public ImVec2 ArcFastVtx_28;
		public ImVec2 ArcFastVtx_29;
		public ImVec2 ArcFastVtx_30;
		public ImVec2 ArcFastVtx_31;
		public ImVec2 ArcFastVtx_32;
		public ImVec2 ArcFastVtx_33;
		public ImVec2 ArcFastVtx_34;
		public ImVec2 ArcFastVtx_35;
		public ImVec2 ArcFastVtx_36;
		public ImVec2 ArcFastVtx_37;
		public ImVec2 ArcFastVtx_38;
		public ImVec2 ArcFastVtx_39;
		public ImVec2 ArcFastVtx_40;
		public ImVec2 ArcFastVtx_41;
		public ImVec2 ArcFastVtx_42;
		public ImVec2 ArcFastVtx_43;
		public ImVec2 ArcFastVtx_44;
		public ImVec2 ArcFastVtx_45;
		public ImVec2 ArcFastVtx_46;
		public ImVec2 ArcFastVtx_47;
		public float ArcFastRadiusCutoff;
		public unsafe fixed byte CircleSegmentCounts[64];
		public unsafe ImVec4* TexUvLines;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImFont
	{
		public ImVector<float> IndexAdvanceX;
		public float FallbackAdvanceX;
		public float FontSize;
		public ImVector<char> IndexLookup;
		public ImVector<ImFontGlyph> Glyphs;
		public unsafe ImFontGlyph* FallbackGlyph;
		public unsafe ImFontAtlas* ContainerAtlas;
		public unsafe ImFontConfig* ConfigData;
		public short ConfigDataCount;
		public char FallbackChar;
		public char EllipsisChar;
		public bool DirtyLookupTables;
		public float Scale;
		public float Ascent;
		public float Descent;
		public int MetricsTotalSurface;
		public unsafe fixed byte Used4kPagesMap[2];
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImFontAtlas
	{
		public ImFontAtlasFlags Flags;
		public ImTextureID TexID;
		public int TexDesiredWidth;
		public int TexGlyphPadding;
		public bool Locked;
		public bool TexPixelsUseColors;
		public unsafe byte* TexPixelsAlpha8;
		public unsafe uint* TexPixelsRGBA32;
		public int TexWidth;
		public int TexHeight;
		public ImVec2 TexUvScale;
		public ImVec2 TexUvWhitePixel;
		public ImVector_ImFontPtr Fonts;
		public ImVector_ImFontAtlasCustomRect CustomRects;
		public ImVector_ImFontConfig ConfigData;
		public ImVec4 TexUvLines_0;
		public ImVec4 TexUvLines_1;
		public ImVec4 TexUvLines_2;
		public ImVec4 TexUvLines_3;
		public ImVec4 TexUvLines_4;
		public ImVec4 TexUvLines_5;
		public ImVec4 TexUvLines_6;
		public ImVec4 TexUvLines_7;
		public ImVec4 TexUvLines_8;
		public ImVec4 TexUvLines_9;
		public ImVec4 TexUvLines_10;
		public ImVec4 TexUvLines_11;
		public ImVec4 TexUvLines_12;
		public ImVec4 TexUvLines_13;
		public ImVec4 TexUvLines_14;
		public ImVec4 TexUvLines_15;
		public ImVec4 TexUvLines_16;
		public ImVec4 TexUvLines_17;
		public ImVec4 TexUvLines_18;
		public ImVec4 TexUvLines_19;
		public ImVec4 TexUvLines_20;
		public ImVec4 TexUvLines_21;
		public ImVec4 TexUvLines_22;
		public ImVec4 TexUvLines_23;
		public ImVec4 TexUvLines_24;
		public ImVec4 TexUvLines_25;
		public ImVec4 TexUvLines_26;
		public ImVec4 TexUvLines_27;
		public ImVec4 TexUvLines_28;
		public ImVec4 TexUvLines_29;
		public ImVec4 TexUvLines_30;
		public ImVec4 TexUvLines_31;
		public ImVec4 TexUvLines_32;
		public ImVec4 TexUvLines_33;
		public ImVec4 TexUvLines_34;
		public ImVec4 TexUvLines_35;
		public ImVec4 TexUvLines_36;
		public ImVec4 TexUvLines_37;
		public ImVec4 TexUvLines_38;
		public ImVec4 TexUvLines_39;
		public ImVec4 TexUvLines_40;
		public ImVec4 TexUvLines_41;
		public ImVec4 TexUvLines_42;
		public ImVec4 TexUvLines_43;
		public ImVec4 TexUvLines_44;
		public ImVec4 TexUvLines_45;
		public ImVec4 TexUvLines_46;
		public ImVec4 TexUvLines_47;
		public ImVec4 TexUvLines_48;
		public ImVec4 TexUvLines_49;
		public ImVec4 TexUvLines_50;
		public ImVec4 TexUvLines_51;
		public ImVec4 TexUvLines_52;
		public ImVec4 TexUvLines_53;
		public ImVec4 TexUvLines_54;
		public ImVec4 TexUvLines_55;
		public ImVec4 TexUvLines_56;
		public ImVec4 TexUvLines_57;
		public ImVec4 TexUvLines_58;
		public ImVec4 TexUvLines_59;
		public ImVec4 TexUvLines_60;
		public ImVec4 TexUvLines_61;
		public ImVec4 TexUvLines_62;
		public ImVec4 TexUvLines_63;
		public unsafe ImFontBuilderIO* FontBuilderIO;
		public uint FontBuilderFlags;
		public int PackIdMouseCursors;
		public int PackIdLines;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImFontPtr
	{
		public int Size;
		public int Capacity;
		public unsafe ImFont** Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImFontAtlasCustomRect
	{
		public int Size;
		public int Capacity;
		public unsafe ImFontAtlasCustomRect* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImFontAtlasCustomRect
	{
		public ushort Width;
		public ushort Height;
		public ushort X;
		public ushort Y;
		public uint GlyphID;
		public float GlyphAdvanceX;
		public ImVec2 GlyphOffset;
		public unsafe ImFont* Font;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImFontConfig
	{
		public int Size;
		public int Capacity;
		public unsafe ImFontConfig* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImFontConfig
	{
		public IntPtr FontData;
		public int FontDataSize;
		public bool FontDataOwnedByAtlas;
		public int FontNo;
		public float SizePixels;
		public int OversampleH;
		public int OversampleV;
		public bool PixelSnapH;
		public ImVec2 GlyphExtraSpacing;
		public ImVec2 GlyphOffset;
		public unsafe char* GlyphRanges;
		public float GlyphMinAdvanceX;
		public float GlyphMaxAdvanceX;
		public bool MergeMode;
		public uint FontBuilderFlags;
		public float RasterizerMultiply;
		public char EllipsisChar;
		public unsafe fixed byte Name[40];
		public unsafe ImFont* DstFont;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImFontBuilderIO
	{
		public IntPtr FontBuilder_Build;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawCmdHeader
	{
		public ImVec4 ClipRect;
		public ImTextureID TextureId;
		public uint VtxOffset;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawListSplitter
	{
		public int _Current;
		public int _Count;
		public ImVector_ImDrawChannel _Channels;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImDrawChannel
	{
		public int Size;
		public int Capacity;
		public unsafe ImDrawChannel* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawChannel
	{
		public ImVector<ImDrawCmd> _CmdBuffer;
		public ImVector<ImDrawIdx> _IdxBuffer;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiWindowClass
	{
		public ImGuiID ClassId;
		public ImGuiID ParentViewportId;
		public ImGuiViewportFlags ViewportFlagsOverrideSet;
		public ImGuiViewportFlags ViewportFlagsOverrideClear;
		public ImGuiTabItemFlags TabItemFlagsOverrideSet;
		public ImGuiDockNodeFlags DockNodeFlagsOverrideSet;
		public ImGuiDockNodeFlags DockNodeFlagsOverrideClear;
		public bool DockingAlwaysTabBar;
		public bool DockingAllowUnclassed;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiID
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiID* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiWindowTempData
	{
		public ImVec2 CursorPos;
		public ImVec2 CursorPosPrevLine;
		public ImVec2 CursorStartPos;
		public ImVec2 CursorMaxPos;
		public ImVec2 IdealMaxPos;
		public ImVec2 CurrLineSize;
		public ImVec2 PrevLineSize;
		public float CurrLineTextBaseOffset;
		public float PrevLineTextBaseOffset;
		public ImVec1 Indent;
		public ImVec1 ColumnsOffset;
		public ImVec1 GroupOffset;
		public ImGuiID LastItemId;
		public ImGuiItemStatusFlags LastItemStatusFlags;
		public ImRect LastItemRect;
		public ImRect LastItemDisplayRect;
		public ImGuiNavLayer NavLayerCurrent;
		public int NavLayerActiveMask;
		public int NavLayerActiveMaskNext;
		public ImGuiID NavFocusScopeIdCurrent;
		public bool NavHideHighlightOneFrame;
		public bool NavHasScroll;
		public bool MenuBarAppending;
		public ImVec2 MenuBarOffset;
		public ImGuiMenuColumns MenuColumns;
		public int TreeDepth;
		public uint TreeJumpToParentOnPopMask;
		public ImVector_ImGuiWindowPtr ChildWindows;
		public unsafe ImGuiStorage* StateStorage;
		public unsafe ImGuiOldColumns* CurrentColumns;
		public int CurrentTableIdx;
		public ImGuiLayoutType LayoutType;
		public ImGuiLayoutType ParentLayoutType;
		public int FocusCounterRegular;
		public int FocusCounterTabStop;
		public ImGuiItemFlags ItemFlags;
		public float ItemWidth;
		public float TextWrapPos;
		public ImVector<float> ItemWidthStack;
		public ImVector<float> TextWrapPosStack;
		public ImGuiStackSizes StackSizesOnBegin;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImRect
	{
		public ImVec2 Min;
		public ImVec2 Max;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiMenuColumns
	{
		public float Spacing;
		public float Width;
		public float NextWidth;
		public unsafe fixed float Pos[3];
		public unsafe fixed float NextWidths[3];
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiWindowPtr
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiWindow** Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiStorage
	{
		public ImVector_ImGuiStoragePair Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiStoragePair
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiStoragePair* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiOldColumns
	{
		public ImGuiID ID;
		public ImGuiOldColumnFlags Flags;
		public bool IsFirstFrame;
		public bool IsBeingResized;
		public int Current;
		public int Count;
		public float OffMinX;
		public float OffMaxX;
		public float LineMinY;
		public float LineMaxY;
		public float HostCursorPosY;
		public float HostCursorMaxPosX;
		public ImRect HostInitialClipRect;
		public ImRect HostBackupClipRect;
		public ImRect HostBackupParentWorkRect;
		public ImVector_ImGuiOldColumnData Columns;
		public ImDrawListSplitter Splitter;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiOldColumnData
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiOldColumnData* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiOldColumnData
	{
		public float OffsetNorm;
		public float OffsetNormBeforeResize;
		public ImGuiOldColumnFlags Flags;
		public ImRect ClipRect;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiStackSizes
	{
		public short SizeOfIDStack;
		public short SizeOfColorStack;
		public short SizeOfStyleVarStack;
		public short SizeOfFontStack;
		public short SizeOfFocusScopeStack;
		public short SizeOfGroupStack;
		public short SizeOfBeginPopupStack;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVec2ih
	{
		public short x;
		public short y;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiOldColumns
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiOldColumns* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiWindowDockStyle
	{
		public unsafe fixed uint Colors[6];
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTabBar
	{
		public ImVector_ImGuiTabItem Tabs;
		public ImGuiTabBarFlags Flags;
		public ImGuiID ID;
		public ImGuiID SelectedTabId;
		public ImGuiID NextSelectedTabId;
		public ImGuiID VisibleTabId;
		public int CurrFrameVisible;
		public int PrevFrameVisible;
		public ImRect BarRect;
		public float CurrTabsContentsHeight;
		public float PrevTabsContentsHeight;
		public float WidthAllTabs;
		public float WidthAllTabsIdeal;
		public float ScrollingAnim;
		public float ScrollingTarget;
		public float ScrollingTargetDistToVisibility;
		public float ScrollingSpeed;
		public float ScrollingRectMinX;
		public float ScrollingRectMaxX;
		public ImGuiID ReorderRequestTabId;
		public sbyte ReorderRequestDir;
		public sbyte BeginCount;
		public bool WantLayout;
		public bool VisibleTabWasSubmitted;
		public bool TabsAddedNew;
		public short TabsActiveCount;
		public short LastTabItemIdx;
		public float ItemSpacingY;
		public ImVec2 FramePadding;
		public ImVec2 BackupCursorPos;
		public ImGuiTextBuffer TabsNames;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiTabItem
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiTabItem* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTabItem
	{
		public ImGuiID ID;
		public ImGuiTabItemFlags Flags;
		public unsafe ImGuiWindow* Window;
		public int LastFrameVisible;
		public int LastFrameSelected;
		public float Offset;
		public float Width;
		public float ContentWidth;
		public short NameOffset;
		public short BeginOrder;
		public short IndexDuringLayout;
		public bool WantClose;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTextBuffer
	{
		public ImVector<byte> Buf;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImDrawDataBuilder
	{
		public ImVector_ImDrawListPtr Layers_0;
		public ImVector_ImDrawListPtr Layers_1;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImDrawListPtr
	{
		public int Size;
		public int Capacity;
		public unsafe ImDrawList** Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiPtrOrIndex
	{
		public IntPtr Ptr;
		public int Index;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiShrinkWidthItem
	{
		public int Index;
		public float Width;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiDataTypeTempStorage
	{
		public unsafe fixed byte Data[8];
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct StbTexteditRow
	{
		public float x0;
		public float x1;
		public float baseline_y_delta;
		public float ymin;
		public float ymax;
		public int num_chars;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct STB_TexteditState
	{
		public int cursor;
		public int select_start;
		public int select_end;
		public byte insert_mode;
		public int row_count_per_page;
		public byte cursor_at_end_of_line;
		public byte initialized;
		public byte has_preferred_x;
		public byte single_line;
		public byte padding1;
		public byte padding2;
		public byte padding3;
		public float preferred_x;
		public StbUndoState undostate;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct StbUndoState
	{
		public StbUndoRecord undo_rec_0;
		public StbUndoRecord undo_rec_1;
		public StbUndoRecord undo_rec_2;
		public StbUndoRecord undo_rec_3;
		public StbUndoRecord undo_rec_4;
		public StbUndoRecord undo_rec_5;
		public StbUndoRecord undo_rec_6;
		public StbUndoRecord undo_rec_7;
		public StbUndoRecord undo_rec_8;
		public StbUndoRecord undo_rec_9;
		public StbUndoRecord undo_rec_10;
		public StbUndoRecord undo_rec_11;
		public StbUndoRecord undo_rec_12;
		public StbUndoRecord undo_rec_13;
		public StbUndoRecord undo_rec_14;
		public StbUndoRecord undo_rec_15;
		public StbUndoRecord undo_rec_16;
		public StbUndoRecord undo_rec_17;
		public StbUndoRecord undo_rec_18;
		public StbUndoRecord undo_rec_19;
		public StbUndoRecord undo_rec_20;
		public StbUndoRecord undo_rec_21;
		public StbUndoRecord undo_rec_22;
		public StbUndoRecord undo_rec_23;
		public StbUndoRecord undo_rec_24;
		public StbUndoRecord undo_rec_25;
		public StbUndoRecord undo_rec_26;
		public StbUndoRecord undo_rec_27;
		public StbUndoRecord undo_rec_28;
		public StbUndoRecord undo_rec_29;
		public StbUndoRecord undo_rec_30;
		public StbUndoRecord undo_rec_31;
		public StbUndoRecord undo_rec_32;
		public StbUndoRecord undo_rec_33;
		public StbUndoRecord undo_rec_34;
		public StbUndoRecord undo_rec_35;
		public StbUndoRecord undo_rec_36;
		public StbUndoRecord undo_rec_37;
		public StbUndoRecord undo_rec_38;
		public StbUndoRecord undo_rec_39;
		public StbUndoRecord undo_rec_40;
		public StbUndoRecord undo_rec_41;
		public StbUndoRecord undo_rec_42;
		public StbUndoRecord undo_rec_43;
		public StbUndoRecord undo_rec_44;
		public StbUndoRecord undo_rec_45;
		public StbUndoRecord undo_rec_46;
		public StbUndoRecord undo_rec_47;
		public StbUndoRecord undo_rec_48;
		public StbUndoRecord undo_rec_49;
		public StbUndoRecord undo_rec_50;
		public StbUndoRecord undo_rec_51;
		public StbUndoRecord undo_rec_52;
		public StbUndoRecord undo_rec_53;
		public StbUndoRecord undo_rec_54;
		public StbUndoRecord undo_rec_55;
		public StbUndoRecord undo_rec_56;
		public StbUndoRecord undo_rec_57;
		public StbUndoRecord undo_rec_58;
		public StbUndoRecord undo_rec_59;
		public StbUndoRecord undo_rec_60;
		public StbUndoRecord undo_rec_61;
		public StbUndoRecord undo_rec_62;
		public StbUndoRecord undo_rec_63;
		public StbUndoRecord undo_rec_64;
		public StbUndoRecord undo_rec_65;
		public StbUndoRecord undo_rec_66;
		public StbUndoRecord undo_rec_67;
		public StbUndoRecord undo_rec_68;
		public StbUndoRecord undo_rec_69;
		public StbUndoRecord undo_rec_70;
		public StbUndoRecord undo_rec_71;
		public StbUndoRecord undo_rec_72;
		public StbUndoRecord undo_rec_73;
		public StbUndoRecord undo_rec_74;
		public StbUndoRecord undo_rec_75;
		public StbUndoRecord undo_rec_76;
		public StbUndoRecord undo_rec_77;
		public StbUndoRecord undo_rec_78;
		public StbUndoRecord undo_rec_79;
		public StbUndoRecord undo_rec_80;
		public StbUndoRecord undo_rec_81;
		public StbUndoRecord undo_rec_82;
		public StbUndoRecord undo_rec_83;
		public StbUndoRecord undo_rec_84;
		public StbUndoRecord undo_rec_85;
		public StbUndoRecord undo_rec_86;
		public StbUndoRecord undo_rec_87;
		public StbUndoRecord undo_rec_88;
		public StbUndoRecord undo_rec_89;
		public StbUndoRecord undo_rec_90;
		public StbUndoRecord undo_rec_91;
		public StbUndoRecord undo_rec_92;
		public StbUndoRecord undo_rec_93;
		public StbUndoRecord undo_rec_94;
		public StbUndoRecord undo_rec_95;
		public StbUndoRecord undo_rec_96;
		public StbUndoRecord undo_rec_97;
		public StbUndoRecord undo_rec_98;
		public char undo_char_0;
		public char undo_char_1;
		public char undo_char_2;
		public char undo_char_3;
		public char undo_char_4;
		public char undo_char_5;
		public char undo_char_6;
		public char undo_char_7;
		public char undo_char_8;
		public char undo_char_9;
		public char undo_char_10;
		public char undo_char_11;
		public char undo_char_12;
		public char undo_char_13;
		public char undo_char_14;
		public char undo_char_15;
		public char undo_char_16;
		public char undo_char_17;
		public char undo_char_18;
		public char undo_char_19;
		public char undo_char_20;
		public char undo_char_21;
		public char undo_char_22;
		public char undo_char_23;
		public char undo_char_24;
		public char undo_char_25;
		public char undo_char_26;
		public char undo_char_27;
		public char undo_char_28;
		public char undo_char_29;
		public char undo_char_30;
		public char undo_char_31;
		public char undo_char_32;
		public char undo_char_33;
		public char undo_char_34;
		public char undo_char_35;
		public char undo_char_36;
		public char undo_char_37;
		public char undo_char_38;
		public char undo_char_39;
		public char undo_char_40;
		public char undo_char_41;
		public char undo_char_42;
		public char undo_char_43;
		public char undo_char_44;
		public char undo_char_45;
		public char undo_char_46;
		public char undo_char_47;
		public char undo_char_48;
		public char undo_char_49;
		public char undo_char_50;
		public char undo_char_51;
		public char undo_char_52;
		public char undo_char_53;
		public char undo_char_54;
		public char undo_char_55;
		public char undo_char_56;
		public char undo_char_57;
		public char undo_char_58;
		public char undo_char_59;
		public char undo_char_60;
		public char undo_char_61;
		public char undo_char_62;
		public char undo_char_63;
		public char undo_char_64;
		public char undo_char_65;
		public char undo_char_66;
		public char undo_char_67;
		public char undo_char_68;
		public char undo_char_69;
		public char undo_char_70;
		public char undo_char_71;
		public char undo_char_72;
		public char undo_char_73;
		public char undo_char_74;
		public char undo_char_75;
		public char undo_char_76;
		public char undo_char_77;
		public char undo_char_78;
		public char undo_char_79;
		public char undo_char_80;
		public char undo_char_81;
		public char undo_char_82;
		public char undo_char_83;
		public char undo_char_84;
		public char undo_char_85;
		public char undo_char_86;
		public char undo_char_87;
		public char undo_char_88;
		public char undo_char_89;
		public char undo_char_90;
		public char undo_char_91;
		public char undo_char_92;
		public char undo_char_93;
		public char undo_char_94;
		public char undo_char_95;
		public char undo_char_96;
		public char undo_char_97;
		public char undo_char_98;
		public char undo_char_99;
		public char undo_char_100;
		public char undo_char_101;
		public char undo_char_102;
		public char undo_char_103;
		public char undo_char_104;
		public char undo_char_105;
		public char undo_char_106;
		public char undo_char_107;
		public char undo_char_108;
		public char undo_char_109;
		public char undo_char_110;
		public char undo_char_111;
		public char undo_char_112;
		public char undo_char_113;
		public char undo_char_114;
		public char undo_char_115;
		public char undo_char_116;
		public char undo_char_117;
		public char undo_char_118;
		public char undo_char_119;
		public char undo_char_120;
		public char undo_char_121;
		public char undo_char_122;
		public char undo_char_123;
		public char undo_char_124;
		public char undo_char_125;
		public char undo_char_126;
		public char undo_char_127;
		public char undo_char_128;
		public char undo_char_129;
		public char undo_char_130;
		public char undo_char_131;
		public char undo_char_132;
		public char undo_char_133;
		public char undo_char_134;
		public char undo_char_135;
		public char undo_char_136;
		public char undo_char_137;
		public char undo_char_138;
		public char undo_char_139;
		public char undo_char_140;
		public char undo_char_141;
		public char undo_char_142;
		public char undo_char_143;
		public char undo_char_144;
		public char undo_char_145;
		public char undo_char_146;
		public char undo_char_147;
		public char undo_char_148;
		public char undo_char_149;
		public char undo_char_150;
		public char undo_char_151;
		public char undo_char_152;
		public char undo_char_153;
		public char undo_char_154;
		public char undo_char_155;
		public char undo_char_156;
		public char undo_char_157;
		public char undo_char_158;
		public char undo_char_159;
		public char undo_char_160;
		public char undo_char_161;
		public char undo_char_162;
		public char undo_char_163;
		public char undo_char_164;
		public char undo_char_165;
		public char undo_char_166;
		public char undo_char_167;
		public char undo_char_168;
		public char undo_char_169;
		public char undo_char_170;
		public char undo_char_171;
		public char undo_char_172;
		public char undo_char_173;
		public char undo_char_174;
		public char undo_char_175;
		public char undo_char_176;
		public char undo_char_177;
		public char undo_char_178;
		public char undo_char_179;
		public char undo_char_180;
		public char undo_char_181;
		public char undo_char_182;
		public char undo_char_183;
		public char undo_char_184;
		public char undo_char_185;
		public char undo_char_186;
		public char undo_char_187;
		public char undo_char_188;
		public char undo_char_189;
		public char undo_char_190;
		public char undo_char_191;
		public char undo_char_192;
		public char undo_char_193;
		public char undo_char_194;
		public char undo_char_195;
		public char undo_char_196;
		public char undo_char_197;
		public char undo_char_198;
		public char undo_char_199;
		public char undo_char_200;
		public char undo_char_201;
		public char undo_char_202;
		public char undo_char_203;
		public char undo_char_204;
		public char undo_char_205;
		public char undo_char_206;
		public char undo_char_207;
		public char undo_char_208;
		public char undo_char_209;
		public char undo_char_210;
		public char undo_char_211;
		public char undo_char_212;
		public char undo_char_213;
		public char undo_char_214;
		public char undo_char_215;
		public char undo_char_216;
		public char undo_char_217;
		public char undo_char_218;
		public char undo_char_219;
		public char undo_char_220;
		public char undo_char_221;
		public char undo_char_222;
		public char undo_char_223;
		public char undo_char_224;
		public char undo_char_225;
		public char undo_char_226;
		public char undo_char_227;
		public char undo_char_228;
		public char undo_char_229;
		public char undo_char_230;
		public char undo_char_231;
		public char undo_char_232;
		public char undo_char_233;
		public char undo_char_234;
		public char undo_char_235;
		public char undo_char_236;
		public char undo_char_237;
		public char undo_char_238;
		public char undo_char_239;
		public char undo_char_240;
		public char undo_char_241;
		public char undo_char_242;
		public char undo_char_243;
		public char undo_char_244;
		public char undo_char_245;
		public char undo_char_246;
		public char undo_char_247;
		public char undo_char_248;
		public char undo_char_249;
		public char undo_char_250;
		public char undo_char_251;
		public char undo_char_252;
		public char undo_char_253;
		public char undo_char_254;
		public char undo_char_255;
		public char undo_char_256;
		public char undo_char_257;
		public char undo_char_258;
		public char undo_char_259;
		public char undo_char_260;
		public char undo_char_261;
		public char undo_char_262;
		public char undo_char_263;
		public char undo_char_264;
		public char undo_char_265;
		public char undo_char_266;
		public char undo_char_267;
		public char undo_char_268;
		public char undo_char_269;
		public char undo_char_270;
		public char undo_char_271;
		public char undo_char_272;
		public char undo_char_273;
		public char undo_char_274;
		public char undo_char_275;
		public char undo_char_276;
		public char undo_char_277;
		public char undo_char_278;
		public char undo_char_279;
		public char undo_char_280;
		public char undo_char_281;
		public char undo_char_282;
		public char undo_char_283;
		public char undo_char_284;
		public char undo_char_285;
		public char undo_char_286;
		public char undo_char_287;
		public char undo_char_288;
		public char undo_char_289;
		public char undo_char_290;
		public char undo_char_291;
		public char undo_char_292;
		public char undo_char_293;
		public char undo_char_294;
		public char undo_char_295;
		public char undo_char_296;
		public char undo_char_297;
		public char undo_char_298;
		public char undo_char_299;
		public char undo_char_300;
		public char undo_char_301;
		public char undo_char_302;
		public char undo_char_303;
		public char undo_char_304;
		public char undo_char_305;
		public char undo_char_306;
		public char undo_char_307;
		public char undo_char_308;
		public char undo_char_309;
		public char undo_char_310;
		public char undo_char_311;
		public char undo_char_312;
		public char undo_char_313;
		public char undo_char_314;
		public char undo_char_315;
		public char undo_char_316;
		public char undo_char_317;
		public char undo_char_318;
		public char undo_char_319;
		public char undo_char_320;
		public char undo_char_321;
		public char undo_char_322;
		public char undo_char_323;
		public char undo_char_324;
		public char undo_char_325;
		public char undo_char_326;
		public char undo_char_327;
		public char undo_char_328;
		public char undo_char_329;
		public char undo_char_330;
		public char undo_char_331;
		public char undo_char_332;
		public char undo_char_333;
		public char undo_char_334;
		public char undo_char_335;
		public char undo_char_336;
		public char undo_char_337;
		public char undo_char_338;
		public char undo_char_339;
		public char undo_char_340;
		public char undo_char_341;
		public char undo_char_342;
		public char undo_char_343;
		public char undo_char_344;
		public char undo_char_345;
		public char undo_char_346;
		public char undo_char_347;
		public char undo_char_348;
		public char undo_char_349;
		public char undo_char_350;
		public char undo_char_351;
		public char undo_char_352;
		public char undo_char_353;
		public char undo_char_354;
		public char undo_char_355;
		public char undo_char_356;
		public char undo_char_357;
		public char undo_char_358;
		public char undo_char_359;
		public char undo_char_360;
		public char undo_char_361;
		public char undo_char_362;
		public char undo_char_363;
		public char undo_char_364;
		public char undo_char_365;
		public char undo_char_366;
		public char undo_char_367;
		public char undo_char_368;
		public char undo_char_369;
		public char undo_char_370;
		public char undo_char_371;
		public char undo_char_372;
		public char undo_char_373;
		public char undo_char_374;
		public char undo_char_375;
		public char undo_char_376;
		public char undo_char_377;
		public char undo_char_378;
		public char undo_char_379;
		public char undo_char_380;
		public char undo_char_381;
		public char undo_char_382;
		public char undo_char_383;
		public char undo_char_384;
		public char undo_char_385;
		public char undo_char_386;
		public char undo_char_387;
		public char undo_char_388;
		public char undo_char_389;
		public char undo_char_390;
		public char undo_char_391;
		public char undo_char_392;
		public char undo_char_393;
		public char undo_char_394;
		public char undo_char_395;
		public char undo_char_396;
		public char undo_char_397;
		public char undo_char_398;
		public char undo_char_399;
		public char undo_char_400;
		public char undo_char_401;
		public char undo_char_402;
		public char undo_char_403;
		public char undo_char_404;
		public char undo_char_405;
		public char undo_char_406;
		public char undo_char_407;
		public char undo_char_408;
		public char undo_char_409;
		public char undo_char_410;
		public char undo_char_411;
		public char undo_char_412;
		public char undo_char_413;
		public char undo_char_414;
		public char undo_char_415;
		public char undo_char_416;
		public char undo_char_417;
		public char undo_char_418;
		public char undo_char_419;
		public char undo_char_420;
		public char undo_char_421;
		public char undo_char_422;
		public char undo_char_423;
		public char undo_char_424;
		public char undo_char_425;
		public char undo_char_426;
		public char undo_char_427;
		public char undo_char_428;
		public char undo_char_429;
		public char undo_char_430;
		public char undo_char_431;
		public char undo_char_432;
		public char undo_char_433;
		public char undo_char_434;
		public char undo_char_435;
		public char undo_char_436;
		public char undo_char_437;
		public char undo_char_438;
		public char undo_char_439;
		public char undo_char_440;
		public char undo_char_441;
		public char undo_char_442;
		public char undo_char_443;
		public char undo_char_444;
		public char undo_char_445;
		public char undo_char_446;
		public char undo_char_447;
		public char undo_char_448;
		public char undo_char_449;
		public char undo_char_450;
		public char undo_char_451;
		public char undo_char_452;
		public char undo_char_453;
		public char undo_char_454;
		public char undo_char_455;
		public char undo_char_456;
		public char undo_char_457;
		public char undo_char_458;
		public char undo_char_459;
		public char undo_char_460;
		public char undo_char_461;
		public char undo_char_462;
		public char undo_char_463;
		public char undo_char_464;
		public char undo_char_465;
		public char undo_char_466;
		public char undo_char_467;
		public char undo_char_468;
		public char undo_char_469;
		public char undo_char_470;
		public char undo_char_471;
		public char undo_char_472;
		public char undo_char_473;
		public char undo_char_474;
		public char undo_char_475;
		public char undo_char_476;
		public char undo_char_477;
		public char undo_char_478;
		public char undo_char_479;
		public char undo_char_480;
		public char undo_char_481;
		public char undo_char_482;
		public char undo_char_483;
		public char undo_char_484;
		public char undo_char_485;
		public char undo_char_486;
		public char undo_char_487;
		public char undo_char_488;
		public char undo_char_489;
		public char undo_char_490;
		public char undo_char_491;
		public char undo_char_492;
		public char undo_char_493;
		public char undo_char_494;
		public char undo_char_495;
		public char undo_char_496;
		public char undo_char_497;
		public char undo_char_498;
		public char undo_char_499;
		public char undo_char_500;
		public char undo_char_501;
		public char undo_char_502;
		public char undo_char_503;
		public char undo_char_504;
		public char undo_char_505;
		public char undo_char_506;
		public char undo_char_507;
		public char undo_char_508;
		public char undo_char_509;
		public char undo_char_510;
		public char undo_char_511;
		public char undo_char_512;
		public char undo_char_513;
		public char undo_char_514;
		public char undo_char_515;
		public char undo_char_516;
		public char undo_char_517;
		public char undo_char_518;
		public char undo_char_519;
		public char undo_char_520;
		public char undo_char_521;
		public char undo_char_522;
		public char undo_char_523;
		public char undo_char_524;
		public char undo_char_525;
		public char undo_char_526;
		public char undo_char_527;
		public char undo_char_528;
		public char undo_char_529;
		public char undo_char_530;
		public char undo_char_531;
		public char undo_char_532;
		public char undo_char_533;
		public char undo_char_534;
		public char undo_char_535;
		public char undo_char_536;
		public char undo_char_537;
		public char undo_char_538;
		public char undo_char_539;
		public char undo_char_540;
		public char undo_char_541;
		public char undo_char_542;
		public char undo_char_543;
		public char undo_char_544;
		public char undo_char_545;
		public char undo_char_546;
		public char undo_char_547;
		public char undo_char_548;
		public char undo_char_549;
		public char undo_char_550;
		public char undo_char_551;
		public char undo_char_552;
		public char undo_char_553;
		public char undo_char_554;
		public char undo_char_555;
		public char undo_char_556;
		public char undo_char_557;
		public char undo_char_558;
		public char undo_char_559;
		public char undo_char_560;
		public char undo_char_561;
		public char undo_char_562;
		public char undo_char_563;
		public char undo_char_564;
		public char undo_char_565;
		public char undo_char_566;
		public char undo_char_567;
		public char undo_char_568;
		public char undo_char_569;
		public char undo_char_570;
		public char undo_char_571;
		public char undo_char_572;
		public char undo_char_573;
		public char undo_char_574;
		public char undo_char_575;
		public char undo_char_576;
		public char undo_char_577;
		public char undo_char_578;
		public char undo_char_579;
		public char undo_char_580;
		public char undo_char_581;
		public char undo_char_582;
		public char undo_char_583;
		public char undo_char_584;
		public char undo_char_585;
		public char undo_char_586;
		public char undo_char_587;
		public char undo_char_588;
		public char undo_char_589;
		public char undo_char_590;
		public char undo_char_591;
		public char undo_char_592;
		public char undo_char_593;
		public char undo_char_594;
		public char undo_char_595;
		public char undo_char_596;
		public char undo_char_597;
		public char undo_char_598;
		public char undo_char_599;
		public char undo_char_600;
		public char undo_char_601;
		public char undo_char_602;
		public char undo_char_603;
		public char undo_char_604;
		public char undo_char_605;
		public char undo_char_606;
		public char undo_char_607;
		public char undo_char_608;
		public char undo_char_609;
		public char undo_char_610;
		public char undo_char_611;
		public char undo_char_612;
		public char undo_char_613;
		public char undo_char_614;
		public char undo_char_615;
		public char undo_char_616;
		public char undo_char_617;
		public char undo_char_618;
		public char undo_char_619;
		public char undo_char_620;
		public char undo_char_621;
		public char undo_char_622;
		public char undo_char_623;
		public char undo_char_624;
		public char undo_char_625;
		public char undo_char_626;
		public char undo_char_627;
		public char undo_char_628;
		public char undo_char_629;
		public char undo_char_630;
		public char undo_char_631;
		public char undo_char_632;
		public char undo_char_633;
		public char undo_char_634;
		public char undo_char_635;
		public char undo_char_636;
		public char undo_char_637;
		public char undo_char_638;
		public char undo_char_639;
		public char undo_char_640;
		public char undo_char_641;
		public char undo_char_642;
		public char undo_char_643;
		public char undo_char_644;
		public char undo_char_645;
		public char undo_char_646;
		public char undo_char_647;
		public char undo_char_648;
		public char undo_char_649;
		public char undo_char_650;
		public char undo_char_651;
		public char undo_char_652;
		public char undo_char_653;
		public char undo_char_654;
		public char undo_char_655;
		public char undo_char_656;
		public char undo_char_657;
		public char undo_char_658;
		public char undo_char_659;
		public char undo_char_660;
		public char undo_char_661;
		public char undo_char_662;
		public char undo_char_663;
		public char undo_char_664;
		public char undo_char_665;
		public char undo_char_666;
		public char undo_char_667;
		public char undo_char_668;
		public char undo_char_669;
		public char undo_char_670;
		public char undo_char_671;
		public char undo_char_672;
		public char undo_char_673;
		public char undo_char_674;
		public char undo_char_675;
		public char undo_char_676;
		public char undo_char_677;
		public char undo_char_678;
		public char undo_char_679;
		public char undo_char_680;
		public char undo_char_681;
		public char undo_char_682;
		public char undo_char_683;
		public char undo_char_684;
		public char undo_char_685;
		public char undo_char_686;
		public char undo_char_687;
		public char undo_char_688;
		public char undo_char_689;
		public char undo_char_690;
		public char undo_char_691;
		public char undo_char_692;
		public char undo_char_693;
		public char undo_char_694;
		public char undo_char_695;
		public char undo_char_696;
		public char undo_char_697;
		public char undo_char_698;
		public char undo_char_699;
		public char undo_char_700;
		public char undo_char_701;
		public char undo_char_702;
		public char undo_char_703;
		public char undo_char_704;
		public char undo_char_705;
		public char undo_char_706;
		public char undo_char_707;
		public char undo_char_708;
		public char undo_char_709;
		public char undo_char_710;
		public char undo_char_711;
		public char undo_char_712;
		public char undo_char_713;
		public char undo_char_714;
		public char undo_char_715;
		public char undo_char_716;
		public char undo_char_717;
		public char undo_char_718;
		public char undo_char_719;
		public char undo_char_720;
		public char undo_char_721;
		public char undo_char_722;
		public char undo_char_723;
		public char undo_char_724;
		public char undo_char_725;
		public char undo_char_726;
		public char undo_char_727;
		public char undo_char_728;
		public char undo_char_729;
		public char undo_char_730;
		public char undo_char_731;
		public char undo_char_732;
		public char undo_char_733;
		public char undo_char_734;
		public char undo_char_735;
		public char undo_char_736;
		public char undo_char_737;
		public char undo_char_738;
		public char undo_char_739;
		public char undo_char_740;
		public char undo_char_741;
		public char undo_char_742;
		public char undo_char_743;
		public char undo_char_744;
		public char undo_char_745;
		public char undo_char_746;
		public char undo_char_747;
		public char undo_char_748;
		public char undo_char_749;
		public char undo_char_750;
		public char undo_char_751;
		public char undo_char_752;
		public char undo_char_753;
		public char undo_char_754;
		public char undo_char_755;
		public char undo_char_756;
		public char undo_char_757;
		public char undo_char_758;
		public char undo_char_759;
		public char undo_char_760;
		public char undo_char_761;
		public char undo_char_762;
		public char undo_char_763;
		public char undo_char_764;
		public char undo_char_765;
		public char undo_char_766;
		public char undo_char_767;
		public char undo_char_768;
		public char undo_char_769;
		public char undo_char_770;
		public char undo_char_771;
		public char undo_char_772;
		public char undo_char_773;
		public char undo_char_774;
		public char undo_char_775;
		public char undo_char_776;
		public char undo_char_777;
		public char undo_char_778;
		public char undo_char_779;
		public char undo_char_780;
		public char undo_char_781;
		public char undo_char_782;
		public char undo_char_783;
		public char undo_char_784;
		public char undo_char_785;
		public char undo_char_786;
		public char undo_char_787;
		public char undo_char_788;
		public char undo_char_789;
		public char undo_char_790;
		public char undo_char_791;
		public char undo_char_792;
		public char undo_char_793;
		public char undo_char_794;
		public char undo_char_795;
		public char undo_char_796;
		public char undo_char_797;
		public char undo_char_798;
		public char undo_char_799;
		public char undo_char_800;
		public char undo_char_801;
		public char undo_char_802;
		public char undo_char_803;
		public char undo_char_804;
		public char undo_char_805;
		public char undo_char_806;
		public char undo_char_807;
		public char undo_char_808;
		public char undo_char_809;
		public char undo_char_810;
		public char undo_char_811;
		public char undo_char_812;
		public char undo_char_813;
		public char undo_char_814;
		public char undo_char_815;
		public char undo_char_816;
		public char undo_char_817;
		public char undo_char_818;
		public char undo_char_819;
		public char undo_char_820;
		public char undo_char_821;
		public char undo_char_822;
		public char undo_char_823;
		public char undo_char_824;
		public char undo_char_825;
		public char undo_char_826;
		public char undo_char_827;
		public char undo_char_828;
		public char undo_char_829;
		public char undo_char_830;
		public char undo_char_831;
		public char undo_char_832;
		public char undo_char_833;
		public char undo_char_834;
		public char undo_char_835;
		public char undo_char_836;
		public char undo_char_837;
		public char undo_char_838;
		public char undo_char_839;
		public char undo_char_840;
		public char undo_char_841;
		public char undo_char_842;
		public char undo_char_843;
		public char undo_char_844;
		public char undo_char_845;
		public char undo_char_846;
		public char undo_char_847;
		public char undo_char_848;
		public char undo_char_849;
		public char undo_char_850;
		public char undo_char_851;
		public char undo_char_852;
		public char undo_char_853;
		public char undo_char_854;
		public char undo_char_855;
		public char undo_char_856;
		public char undo_char_857;
		public char undo_char_858;
		public char undo_char_859;
		public char undo_char_860;
		public char undo_char_861;
		public char undo_char_862;
		public char undo_char_863;
		public char undo_char_864;
		public char undo_char_865;
		public char undo_char_866;
		public char undo_char_867;
		public char undo_char_868;
		public char undo_char_869;
		public char undo_char_870;
		public char undo_char_871;
		public char undo_char_872;
		public char undo_char_873;
		public char undo_char_874;
		public char undo_char_875;
		public char undo_char_876;
		public char undo_char_877;
		public char undo_char_878;
		public char undo_char_879;
		public char undo_char_880;
		public char undo_char_881;
		public char undo_char_882;
		public char undo_char_883;
		public char undo_char_884;
		public char undo_char_885;
		public char undo_char_886;
		public char undo_char_887;
		public char undo_char_888;
		public char undo_char_889;
		public char undo_char_890;
		public char undo_char_891;
		public char undo_char_892;
		public char undo_char_893;
		public char undo_char_894;
		public char undo_char_895;
		public char undo_char_896;
		public char undo_char_897;
		public char undo_char_898;
		public char undo_char_899;
		public char undo_char_900;
		public char undo_char_901;
		public char undo_char_902;
		public char undo_char_903;
		public char undo_char_904;
		public char undo_char_905;
		public char undo_char_906;
		public char undo_char_907;
		public char undo_char_908;
		public char undo_char_909;
		public char undo_char_910;
		public char undo_char_911;
		public char undo_char_912;
		public char undo_char_913;
		public char undo_char_914;
		public char undo_char_915;
		public char undo_char_916;
		public char undo_char_917;
		public char undo_char_918;
		public char undo_char_919;
		public char undo_char_920;
		public char undo_char_921;
		public char undo_char_922;
		public char undo_char_923;
		public char undo_char_924;
		public char undo_char_925;
		public char undo_char_926;
		public char undo_char_927;
		public char undo_char_928;
		public char undo_char_929;
		public char undo_char_930;
		public char undo_char_931;
		public char undo_char_932;
		public char undo_char_933;
		public char undo_char_934;
		public char undo_char_935;
		public char undo_char_936;
		public char undo_char_937;
		public char undo_char_938;
		public char undo_char_939;
		public char undo_char_940;
		public char undo_char_941;
		public char undo_char_942;
		public char undo_char_943;
		public char undo_char_944;
		public char undo_char_945;
		public char undo_char_946;
		public char undo_char_947;
		public char undo_char_948;
		public char undo_char_949;
		public char undo_char_950;
		public char undo_char_951;
		public char undo_char_952;
		public char undo_char_953;
		public char undo_char_954;
		public char undo_char_955;
		public char undo_char_956;
		public char undo_char_957;
		public char undo_char_958;
		public char undo_char_959;
		public char undo_char_960;
		public char undo_char_961;
		public char undo_char_962;
		public char undo_char_963;
		public char undo_char_964;
		public char undo_char_965;
		public char undo_char_966;
		public char undo_char_967;
		public char undo_char_968;
		public char undo_char_969;
		public char undo_char_970;
		public char undo_char_971;
		public char undo_char_972;
		public char undo_char_973;
		public char undo_char_974;
		public char undo_char_975;
		public char undo_char_976;
		public char undo_char_977;
		public char undo_char_978;
		public char undo_char_979;
		public char undo_char_980;
		public char undo_char_981;
		public char undo_char_982;
		public char undo_char_983;
		public char undo_char_984;
		public char undo_char_985;
		public char undo_char_986;
		public char undo_char_987;
		public char undo_char_988;
		public char undo_char_989;
		public char undo_char_990;
		public char undo_char_991;
		public char undo_char_992;
		public char undo_char_993;
		public char undo_char_994;
		public char undo_char_995;
		public char undo_char_996;
		public char undo_char_997;
		public char undo_char_998;
		public short undo_point;
		public short redo_point;
		public int undo_char_point;
		public int redo_char_point;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct StbUndoRecord
	{
		public int where;
		public int insert_length;
		public int delete_length;
		public int char_storage;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiWindowSettings
	{
		public ImGuiID ID;
		public ImVec2ih Pos;
		public ImVec2ih Size;
		public ImVec2ih ViewportPos;
		public ImGuiID ViewportId;
		public ImGuiID DockId;
		public ImGuiID ClassId;
		public short DockOrder;
		public bool Collapsed;
		public bool WantApply;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTableSettings
	{
		public ImGuiID ID;
		public ImGuiTableFlags SaveFlags;
		public float RefScale;
		public ImGuiTableColumnIdx ColumnsCount;
		public ImGuiTableColumnIdx ColumnsCountMax;
		public bool WantApply;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImSpan_ImGuiTableColumn
	{
		public unsafe ImGuiTableColumn* Data;
		public unsafe ImGuiTableColumn* DataEnd;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImSpan_ImGuiTableColumnIdx
	{
		public unsafe ImGuiTableColumnIdx* Data;
		public unsafe ImGuiTableColumnIdx* DataEnd;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImSpan_ImGuiTableCellData
	{
		public unsafe ImGuiTableCellData* Data;
		public unsafe ImGuiTableCellData* DataEnd;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiTableColumnSortSpecs
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiTableColumnSortSpecs* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTableSortSpecs
	{
		public unsafe ImGuiTableColumnSortSpecs* Specs;
		public int SpecsCount;
		public bool SpecsDirty;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiSettingsHandler
	{
		public unsafe byte* TypeName;
		public ImGuiID TypeHash;
		public IntPtr ClearAllFn;
		public IntPtr ReadInitFn;
		public IntPtr ReadOpenFn;
		public IntPtr ReadLineFn;
		public IntPtr ApplyAllFn;
		public IntPtr WriteAllFn;
		public IntPtr UserData;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiContext
	{
		public bool Initialized;
		public bool FontAtlasOwnedByContext;
		public ImGuiIO IO;
		public ImGuiPlatformIO PlatformIO;
		public ImGuiStyle Style;
		public ImGuiConfigFlags ConfigFlagsCurrFrame;
		public ImGuiConfigFlags ConfigFlagsLastFrame;
		public unsafe ImFont* Font;
		public float FontSize;
		public float FontBaseSize;
		public ImDrawListSharedData DrawListSharedData;
		public double Time;
		public int FrameCount;
		public int FrameCountEnded;
		public int FrameCountPlatformEnded;
		public int FrameCountRendered;
		public bool WithinFrameScope;
		public bool WithinFrameScopeWithImplicitWindow;
		public bool WithinEndChild;
		public bool GcCompactAll;
		public bool TestEngineHookItems;
		public ImGuiID TestEngineHookIdInfo;
		public IntPtr TestEngine;
		public ImVector_ImGuiWindowPtr Windows;
		public ImVector_ImGuiWindowPtr WindowsFocusOrder;
		public ImVector_ImGuiWindowPtr WindowsTempSortBuffer;
		public ImVector_ImGuiWindowPtr CurrentWindowStack;
		public ImGuiStorage WindowsById;
		public int WindowsActiveCount;
		public unsafe ImGuiWindow* CurrentWindow;
		public unsafe ImGuiWindow* HoveredWindow;
		public unsafe ImGuiWindow* HoveredWindowUnderMovingWindow;
		public unsafe ImGuiDockNode* HoveredDockNode;
		public unsafe ImGuiWindow* MovingWindow;
		public unsafe ImGuiWindow* WheelingWindow;
		public ImVec2 WheelingWindowRefMousePos;
		public float WheelingWindowTimer;
		public ImGuiID HoveredId;
		public ImGuiID HoveredIdPreviousFrame;
		public bool HoveredIdAllowOverlap;
		public bool HoveredIdUsingMouseWheel;
		public bool HoveredIdPreviousFrameUsingMouseWheel;
		public bool HoveredIdDisabled;
		public float HoveredIdTimer;
		public float HoveredIdNotActiveTimer;
		public ImGuiID ActiveId;
		public ImGuiID ActiveIdIsAlive;
		public float ActiveIdTimer;
		public bool ActiveIdIsJustActivated;
		public bool ActiveIdAllowOverlap;
		public bool ActiveIdNoClearOnFocusLoss;
		public bool ActiveIdHasBeenPressedBefore;
		public bool ActiveIdHasBeenEditedBefore;
		public bool ActiveIdHasBeenEditedThisFrame;
		public bool ActiveIdUsingMouseWheel;
		public uint ActiveIdUsingNavDirMask;
		public uint ActiveIdUsingNavInputMask;
		public ulong ActiveIdUsingKeyInputMask;
		public ImVec2 ActiveIdClickOffset;
		public unsafe ImGuiWindow* ActiveIdWindow;
		public ImGuiInputSource ActiveIdSource;
		public int ActiveIdMouseButton;
		public ImGuiID ActiveIdPreviousFrame;
		public bool ActiveIdPreviousFrameIsAlive;
		public bool ActiveIdPreviousFrameHasBeenEditedBefore;
		public unsafe ImGuiWindow* ActiveIdPreviousFrameWindow;
		public ImGuiID LastActiveId;
		public float LastActiveIdTimer;
		public ImGuiNextWindowData NextWindowData;
		public ImGuiNextItemData NextItemData;
		public ImVector_ImGuiColorMod ColorStack;
		public ImVector_ImGuiStyleMod StyleVarStack;
		public ImVector_ImFontPtr FontStack;
		public ImVector_ImGuiID FocusScopeStack;
		public ImVector_ImGuiItemFlags ItemFlagsStack;
		public ImVector_ImGuiGroupData GroupStack;
		public ImVector_ImGuiPopupData OpenPopupStack;
		public ImVector_ImGuiPopupData BeginPopupStack;
		public ImVector_ImGuiViewportPPtr Viewports;
		public float CurrentDpiScale;
		public unsafe ImGuiViewportP* CurrentViewport;
		public unsafe ImGuiViewportP* MouseViewport;
		public unsafe ImGuiViewportP* MouseLastHoveredViewport;
		public ImGuiID PlatformLastFocusedViewportId;
		public ImGuiPlatformMonitor FallbackMonitor;
		public int ViewportFrontMostStampCount;
		public unsafe ImGuiWindow* NavWindow;
		public ImGuiID NavId;
		public ImGuiID NavFocusScopeId;
		public ImGuiID NavActivateId;
		public ImGuiID NavActivateDownId;
		public ImGuiID NavActivatePressedId;
		public ImGuiID NavInputId;
		public ImGuiID NavJustTabbedId;
		public ImGuiID NavJustMovedToId;
		public ImGuiID NavJustMovedToFocusScopeId;
		public ImGuiKeyModFlags NavJustMovedToKeyMods;
		public ImGuiID NavNextActivateId;
		public ImGuiInputSource NavInputSource;
		public ImRect NavScoringRect;
		public int NavScoringCount;
		public ImGuiNavLayer NavLayer;
		public int NavIdTabCounter;
		public bool NavIdIsAlive;
		public bool NavMousePosDirty;
		public bool NavDisableHighlight;
		public bool NavDisableMouseHover;
		public bool NavAnyRequest;
		public bool NavInitRequest;
		public bool NavInitRequestFromMove;
		public ImGuiID NavInitResultId;
		public ImRect NavInitResultRectRel;
		public bool NavMoveRequest;
		public ImGuiNavMoveFlags NavMoveRequestFlags;
		public ImGuiNavForward NavMoveRequestForward;
		public ImGuiKeyModFlags NavMoveRequestKeyMods;
		public ImGuiDir NavMoveDir;
		public ImGuiDir NavMoveDirLast;
		public ImGuiDir NavMoveClipDir;
		public ImGuiNavMoveResult NavMoveResultLocal;
		public ImGuiNavMoveResult NavMoveResultLocalVisibleSet;
		public ImGuiNavMoveResult NavMoveResultOther;
		public unsafe ImGuiWindow* NavWrapRequestWindow;
		public ImGuiNavMoveFlags NavWrapRequestFlags;
		public unsafe ImGuiWindow* NavWindowingTarget;
		public unsafe ImGuiWindow* NavWindowingTargetAnim;
		public unsafe ImGuiWindow* NavWindowingListWindow;
		public float NavWindowingTimer;
		public float NavWindowingHighlightAlpha;
		public bool NavWindowingToggleLayer;
		public unsafe ImGuiWindow* TabFocusRequestCurrWindow;
		public unsafe ImGuiWindow* TabFocusRequestNextWindow;
		public int TabFocusRequestCurrCounterRegular;
		public int TabFocusRequestCurrCounterTabStop;
		public int TabFocusRequestNextCounterRegular;
		public int TabFocusRequestNextCounterTabStop;
		public bool TabFocusPressed;
		public float DimBgRatio;
		public ImGuiMouseCursor MouseCursor;
		public bool DragDropActive;
		public bool DragDropWithinSource;
		public bool DragDropWithinTarget;
		public ImGuiDragDropFlags DragDropSourceFlags;
		public int DragDropSourceFrameCount;
		public int DragDropMouseButton;
		public ImGuiPayload DragDropPayload;
		public ImRect DragDropTargetRect;
		public ImGuiID DragDropTargetId;
		public ImGuiDragDropFlags DragDropAcceptFlags;
		public float DragDropAcceptIdCurrRectSurface;
		public ImGuiID DragDropAcceptIdCurr;
		public ImGuiID DragDropAcceptIdPrev;
		public int DragDropAcceptFrameCount;
		public ImGuiID DragDropHoldJustPressedId;
		public ImVector_unsigned_char DragDropPayloadBufHeap;
		public unsafe fixed byte DragDropPayloadBufLocal[16];
		public unsafe ImGuiTable* CurrentTable;
		public ImPool_ImGuiTable Tables;
		public ImVector_ImGuiPtrOrIndex CurrentTableStack;
		public ImVector<float> TablesLastTimeActive;
		public ImVector_ImDrawChannel DrawChannelsTempMergeBuffer;
		public unsafe ImGuiTabBar* CurrentTabBar;
		public ImPool_ImGuiTabBar TabBars;
		public ImVector_ImGuiPtrOrIndex CurrentTabBarStack;
		public ImVector_ImGuiShrinkWidthItem ShrinkWidthBuffer;
		public ImVec2 LastValidMousePos;
		public ImGuiInputTextState InputTextState;
		public ImFont InputTextPasswordFont;
		public ImGuiID TempInputId;
		public ImGuiColorEditFlags ColorEditOptions;
		public float ColorEditLastHue;
		public float ColorEditLastSat;
		public unsafe fixed float ColorEditLastColor[3];
		public ImVec4 ColorPickerRef;
		public float SliderCurrentAccum;
		public bool SliderCurrentAccumDirty;
		public bool DragCurrentAccumDirty;
		public float DragCurrentAccum;
		public float DragSpeedDefaultRatio;
		public float ScrollbarClickDeltaToGrabCenter;
		public int TooltipOverrideCount;
		public float TooltipSlowDelay;
		public ImVector<byte> ClipboardHandlerData;
		public ImVector_ImGuiID MenusIdSubmittedThisFrame;
		public ImVec2 PlatformImePos;
		public ImVec2 PlatformImeLastPos;
		public unsafe ImGuiViewportP* PlatformImePosViewport;
		public byte PlatformLocaleDecimalPoint;
		public ImGuiDockContext DockContext;
		public bool SettingsLoaded;
		public float SettingsDirtyTimer;
		public ImGuiTextBuffer SettingsIniData;
		public ImVector_ImGuiSettingsHandler SettingsHandlers;
		public ImChunkStream_ImGuiWindowSettings SettingsWindows;
		public ImChunkStream_ImGuiTableSettings SettingsTables;
		public ImVector_ImGuiContextHook Hooks;
		public ImGuiID HookIdNext;
		public bool LogEnabled;
		public ImGuiLogType LogType;
		public ImFileHandle LogFile;
		public ImGuiTextBuffer LogBuffer;
		public unsafe byte* LogNextPrefix;
		public unsafe byte* LogNextSuffix;
		public float LogLinePosY;
		public bool LogLineFirstItem;
		public int LogDepthRef;
		public int LogDepthToExpand;
		public int LogDepthToExpandDefault;
		public bool DebugItemPickerActive;
		public ImGuiID DebugItemPickerBreakId;
		public ImGuiMetricsConfig DebugMetricsConfig;
		public unsafe fixed float FramerateSecPerFrame[120];
		public int FramerateSecPerFrameIdx;
		public float FramerateSecPerFrameAccum;
		public int WantCaptureMouseNextFrame;
		public int WantCaptureKeyboardNextFrame;
		public int WantTextInputNextFrame;
		public unsafe fixed byte TempBuffer[3073];
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiIO
	{
		public ImGuiConfigFlags ConfigFlags;
		public ImGuiBackendFlags BackendFlags;
		public ImVec2 DisplaySize;
		public float DeltaTime;
		public float IniSavingRate;
		public unsafe byte* IniFilename;
		public unsafe byte* LogFilename;
		public float MouseDoubleClickTime;
		public float MouseDoubleClickMaxDist;
		public float MouseDragThreshold;
		public unsafe fixed int KeyMap[22];
		public float KeyRepeatDelay;
		public float KeyRepeatRate;
		public IntPtr UserData;
		public unsafe ImFontAtlas* Fonts;
		public float FontGlobalScale;
		public bool FontAllowUserScaling;
		public unsafe ImFont* FontDefault;
		public ImVec2 DisplayFramebufferScale;
		public bool ConfigDockingNoSplit;
		public bool ConfigDockingWithShift;
		public bool ConfigDockingAlwaysTabBar;
		public bool ConfigDockingTransparentPayload;
		public bool ConfigViewportsNoAutoMerge;
		public bool ConfigViewportsNoTaskBarIcon;
		public bool ConfigViewportsNoDecoration;
		public bool ConfigViewportsNoDefaultParent;
		public bool MouseDrawCursor;
		public bool ConfigMacOSXBehaviors;
		public bool ConfigInputTextCursorBlink;
		public bool ConfigDragClickToInputText;
		public bool ConfigWindowsResizeFromEdges;
		public bool ConfigWindowsMoveFromTitleBarOnly;
		public float ConfigMemoryCompactTimer;
		public unsafe byte* BackendPlatformName;
		public unsafe byte* BackendRendererName;
		public IntPtr BackendPlatformUserData;
		public IntPtr BackendRendererUserData;
		public IntPtr BackendLanguageUserData;
		public IntPtr GetClipboardTextFn;
		public IntPtr SetClipboardTextFn;
		public IntPtr ClipboardUserData;
		public ImVec2 MousePos;
		public unsafe fixed bool MouseDown[5];
		public float MouseWheel;
		public float MouseWheelH;
		public ImGuiID MouseHoveredViewport;
		public bool KeyCtrl;
		public bool KeyShift;
		public bool KeyAlt;
		public bool KeySuper;
		public unsafe fixed bool KeysDown[512];
		public unsafe fixed float NavInputs[21];
		public bool WantCaptureMouse;
		public bool WantCaptureKeyboard;
		public bool WantTextInput;
		public bool WantSetMousePos;
		public bool WantSaveIniSettings;
		public bool NavActive;
		public bool NavVisible;
		public float Framerate;
		public int MetricsRenderVertices;
		public int MetricsRenderIndices;
		public int MetricsRenderWindows;
		public int MetricsActiveWindows;
		public int MetricsActiveAllocations;
		public ImVec2 MouseDelta;
		public ImGuiKeyModFlags KeyMods;
		public ImVec2 MousePosPrev;
		public ImVec2 MouseClickedPos_0;
		public ImVec2 MouseClickedPos_1;
		public ImVec2 MouseClickedPos_2;
		public ImVec2 MouseClickedPos_3;
		public ImVec2 MouseClickedPos_4;
		public unsafe fixed double MouseClickedTime[5];
		public unsafe fixed bool MouseClicked[5];
		public unsafe fixed bool MouseDoubleClicked[5];
		public unsafe fixed bool MouseReleased[5];
		public unsafe fixed bool MouseDownOwned[5];
		public unsafe fixed bool MouseDownWasDoubleClick[5];
		public unsafe fixed float MouseDownDuration[5];
		public unsafe fixed float MouseDownDurationPrev[5];
		public ImVec2 MouseDragMaxDistanceAbs_0;
		public ImVec2 MouseDragMaxDistanceAbs_1;
		public ImVec2 MouseDragMaxDistanceAbs_2;
		public ImVec2 MouseDragMaxDistanceAbs_3;
		public ImVec2 MouseDragMaxDistanceAbs_4;
		public unsafe fixed float MouseDragMaxDistanceSqr[5];
		public unsafe fixed float KeysDownDuration[512];
		public unsafe fixed float KeysDownDurationPrev[512];
		public unsafe fixed float NavInputsDownDuration[21];
		public unsafe fixed float NavInputsDownDurationPrev[21];
		public float PenPressure;
		public char InputQueueSurrogate;
		public ImVector<char> InputQueueCharacters;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiPlatformIO
	{
		public IntPtr Platform_CreateWindow;
		public IntPtr Platform_DestroyWindow;
		public IntPtr Platform_ShowWindow;
		public IntPtr Platform_SetWindowPos;
		public IntPtr Platform_GetWindowPos;
		public IntPtr Platform_SetWindowSize;
		public IntPtr Platform_GetWindowSize;
		public IntPtr Platform_SetWindowFocus;
		public IntPtr Platform_GetWindowFocus;
		public IntPtr Platform_GetWindowMinimized;
		public IntPtr Platform_SetWindowTitle;
		public IntPtr Platform_SetWindowAlpha;
		public IntPtr Platform_UpdateWindow;
		public IntPtr Platform_RenderWindow;
		public IntPtr Platform_SwapBuffers;
		public IntPtr Platform_GetWindowDpiScale;
		public IntPtr Platform_OnChangedViewport;
		public IntPtr Platform_SetImeInputPos;
		public IntPtr Platform_CreateVkSurface;
		public IntPtr Renderer_CreateWindow;
		public IntPtr Renderer_DestroyWindow;
		public IntPtr Renderer_SetWindowSize;
		public IntPtr Renderer_RenderWindow;
		public IntPtr Renderer_SwapBuffers;
		public ImVector_ImGuiPlatformMonitor Monitors;
		public ImVector_ImGuiViewportPtr Viewports;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiPlatformMonitor
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiPlatformMonitor* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiPlatformMonitor
	{
		public ImVec2 MainPos;
		public ImVec2 MainSize;
		public ImVec2 WorkPos;
		public ImVec2 WorkSize;
		public float DpiScale;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiViewportPtr
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiViewport** Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiStyle
	{
		public float Alpha;
		public ImVec2 WindowPadding;
		public float WindowRounding;
		public float WindowBorderSize;
		public ImVec2 WindowMinSize;
		public ImVec2 WindowTitleAlign;
		public ImGuiDir WindowMenuButtonPosition;
		public float ChildRounding;
		public float ChildBorderSize;
		public float PopupRounding;
		public float PopupBorderSize;
		public ImVec2 FramePadding;
		public float FrameRounding;
		public float FrameBorderSize;
		public ImVec2 ItemSpacing;
		public ImVec2 ItemInnerSpacing;
		public ImVec2 CellPadding;
		public ImVec2 TouchExtraPadding;
		public float IndentSpacing;
		public float ColumnsMinSpacing;
		public float ScrollbarSize;
		public float ScrollbarRounding;
		public float GrabMinSize;
		public float GrabRounding;
		public float LogSliderDeadzone;
		public float TabRounding;
		public float TabBorderSize;
		public float TabMinWidthForCloseButton;
		public ImGuiDir ColorButtonPosition;
		public ImVec2 ButtonTextAlign;
		public ImVec2 SelectableTextAlign;
		public ImVec2 DisplayWindowPadding;
		public ImVec2 DisplaySafeAreaPadding;
		public float MouseCursorScale;
		public bool AntiAliasedLines;
		public bool AntiAliasedLinesUseTex;
		public bool AntiAliasedFill;
		public float CurveTessellationTol;
		public float CircleTessellationMaxError;
		public ImVec4 Colors_0;
		public ImVec4 Colors_1;
		public ImVec4 Colors_2;
		public ImVec4 Colors_3;
		public ImVec4 Colors_4;
		public ImVec4 Colors_5;
		public ImVec4 Colors_6;
		public ImVec4 Colors_7;
		public ImVec4 Colors_8;
		public ImVec4 Colors_9;
		public ImVec4 Colors_10;
		public ImVec4 Colors_11;
		public ImVec4 Colors_12;
		public ImVec4 Colors_13;
		public ImVec4 Colors_14;
		public ImVec4 Colors_15;
		public ImVec4 Colors_16;
		public ImVec4 Colors_17;
		public ImVec4 Colors_18;
		public ImVec4 Colors_19;
		public ImVec4 Colors_20;
		public ImVec4 Colors_21;
		public ImVec4 Colors_22;
		public ImVec4 Colors_23;
		public ImVec4 Colors_24;
		public ImVec4 Colors_25;
		public ImVec4 Colors_26;
		public ImVec4 Colors_27;
		public ImVec4 Colors_28;
		public ImVec4 Colors_29;
		public ImVec4 Colors_30;
		public ImVec4 Colors_31;
		public ImVec4 Colors_32;
		public ImVec4 Colors_33;
		public ImVec4 Colors_34;
		public ImVec4 Colors_35;
		public ImVec4 Colors_36;
		public ImVec4 Colors_37;
		public ImVec4 Colors_38;
		public ImVec4 Colors_39;
		public ImVec4 Colors_40;
		public ImVec4 Colors_41;
		public ImVec4 Colors_42;
		public ImVec4 Colors_43;
		public ImVec4 Colors_44;
		public ImVec4 Colors_45;
		public ImVec4 Colors_46;
		public ImVec4 Colors_47;
		public ImVec4 Colors_48;
		public ImVec4 Colors_49;
		public ImVec4 Colors_50;
		public ImVec4 Colors_51;
		public ImVec4 Colors_52;
		public ImVec4 Colors_53;
		public ImVec4 Colors_54;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiNextWindowData
	{
		public ImGuiNextWindowDataFlags Flags;
		public ImGuiCond PosCond;
		public ImGuiCond SizeCond;
		public ImGuiCond CollapsedCond;
		public ImGuiCond DockCond;
		public ImVec2 PosVal;
		public ImVec2 PosPivotVal;
		public ImVec2 SizeVal;
		public ImVec2 ContentSizeVal;
		public ImVec2 ScrollVal;
		public bool PosUndock;
		public bool CollapsedVal;
		public ImRect SizeConstraintRect;
		public IntPtr SizeCallback;
		public IntPtr SizeCallbackUserData;
		public float BgAlphaVal;
		public ImGuiID ViewportId;
		public ImGuiID DockId;
		public ImGuiWindowClass WindowClass;
		public ImVec2 MenuBarOffsetMinVal;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiSizeCallbackData
	{
		public IntPtr UserData;
		public ImVec2 Pos;
		public ImVec2 CurrentSize;
		public ImVec2 DesiredSize;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiNextItemData
	{
		public ImGuiNextItemDataFlags Flags;
		public float Width;
		public ImGuiID FocusScopeId;
		public ImGuiCond OpenCond;
		public bool OpenVal;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiColorMod
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiColorMod* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiColorMod
	{
		public ImGuiCol Col;
		public ImVec4 BackupValue;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiStyleMod
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiStyleMod* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiItemFlags
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiItemFlags* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiGroupData
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiGroupData* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiGroupData
	{
		public ImGuiID WindowID;
		public ImVec2 BackupCursorPos;
		public ImVec2 BackupCursorMaxPos;
		public ImVec1 BackupIndent;
		public ImVec1 BackupGroupOffset;
		public ImVec2 BackupCurrLineSize;
		public float BackupCurrLineTextBaseOffset;
		public ImGuiID BackupActiveIdIsAlive;
		public bool BackupActiveIdPreviousFrameIsAlive;
		public bool BackupHoveredIdIsAlive;
		public bool EmitItem;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiPopupData
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiPopupData* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiPopupData
	{
		public ImGuiID PopupId;
		public unsafe ImGuiWindow* Window;
		public unsafe ImGuiWindow* SourceWindow;
		public int OpenFrameCount;
		public ImGuiID OpenParentId;
		public ImVec2 OpenPopupPos;
		public ImVec2 OpenMousePos;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiViewportPPtr
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiViewportP** Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiNavMoveResult
	{
		public unsafe ImGuiWindow* Window;
		public ImGuiID ID;
		public ImGuiID FocusScopeId;
		public float DistBox;
		public float DistCenter;
		public float DistAxial;
		public ImRect RectRel;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiPayload
	{
		public IntPtr Data;
		public int DataSize;
		public ImGuiID SourceId;
		public ImGuiID SourceParentId;
		public int DataFrameCount;
		public unsafe fixed byte DataType[33];
		public bool Preview;
		public bool Delivery;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_unsigned_char
	{
		public int Size;
		public int Capacity;
		public unsafe byte* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImPool_ImGuiTable
	{
		public ImVector_ImGuiTable Buf;
		public ImGuiStorage Map;
		public ImPoolIdx FreeIdx;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiTable
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiTable* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiPtrOrIndex
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiPtrOrIndex* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImPool_ImGuiTabBar
	{
		public ImVector_ImGuiTabBar Buf;
		public ImGuiStorage Map;
		public ImPoolIdx FreeIdx;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiTabBar
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiTabBar* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiShrinkWidthItem
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiShrinkWidthItem* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiInputTextState
	{
		public ImGuiID ID;
		public int CurLenW;
		public int CurLenA;
		public ImVector<char> TextW;
		public ImVector<byte> TextA;
		public ImVector<byte> InitialTextA;
		public bool TextAIsValid;
		public int BufCapacityA;
		public float ScrollX;
		public STB_TexteditState Stb;
		public float CursorAnim;
		public bool CursorFollow;
		public bool SelectedAllMouseLock;
		public bool Edited;
		public ImGuiInputTextFlags UserFlags;
		public IntPtr UserCallback;
		public IntPtr UserCallbackData;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiInputTextCallbackData
	{
		public ImGuiInputTextFlags EventFlag;
		public ImGuiInputTextFlags Flags;
		public IntPtr UserData;
		public char EventChar;
		public ImGuiKey EventKey;
		public unsafe byte* Buf;
		public int BufTextLen;
		public int BufSize;
		public bool BufDirty;
		public int CursorPos;
		public int SelectionStart;
		public int SelectionEnd;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiDockContext
	{
		public ImGuiStorage Nodes;
		public ImVector_ImGuiDockRequest Requests;
		public ImVector_ImGuiDockNodeSettings NodesSettings;
		public bool WantFullRebuild;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiDockRequest
	{
		public int Size;
		public int Capacity;
		public IntPtr Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiDockNodeSettings
	{
		public int Size;
		public int Capacity;
		public IntPtr Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiSettingsHandler
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiSettingsHandler* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImChunkStream_ImGuiWindowSettings
	{
		public ImVector_ImGuiWindowSettings Buf;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiWindowSettings
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiWindowSettings* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImChunkStream_ImGuiTableSettings
	{
		public ImVector_ImGuiTableSettings Buf;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiTableSettings
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiTableSettings* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiContextHook
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiContextHook* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiContextHook
	{
		public ImGuiID HookId;
		public ImGuiContextHookType Type;
		public ImGuiID Owner;
		public IntPtr Callback;
		public IntPtr UserData;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiMetricsConfig
	{
		public bool ShowWindowsRects;
		public bool ShowWindowsBeginOrder;
		public bool ShowTablesRects;
		public bool ShowDrawCmdMesh;
		public bool ShowDrawCmdBoundingBoxes;
		public bool ShowDockingNodes;
		public int ShowWindowsRectsType;
		public int ShowTablesRectsType;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiLastItemDataBackup
	{
		public ImGuiID LastItemId;
		public ImGuiItemStatusFlags LastItemStatusFlags;
		public ImRect LastItemRect;
		public ImRect LastItemDisplayRect;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiDataTypeInfo
	{
		public IntPtr Size;
		public unsafe byte* Name;
		public unsafe byte* PrintFmt;
		public unsafe byte* ScanFmt;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImBitVector
	{
		public ImVector_ImU32 Storage;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImU32
	{
		public int Size;
		public int Capacity;
		public unsafe uint* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTextRange
	{
		public unsafe byte* b;
		public unsafe byte* e;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiTextFilter
	{
		public unsafe fixed byte InputBuf[256];
		public ImVector_ImGuiTextRange Filters;
		public int CountGrep;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_ImGuiTextRange
	{
		public int Size;
		public int Capacity;
		public unsafe ImGuiTextRange* Data;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiOnceUponAFrame
	{
		public int RefFrame;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImGuiListClipper
	{
		public int DisplayStart;
		public int DisplayEnd;
		public int ItemsCount;
		public int StepNo;
		public int ItemsFrozen;
		public float ItemsHeight;
		public float StartPosY;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImFontGlyphRangesBuilder
	{
		public ImVector_ImU32 UsedChars;
	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ImVector_const_charPtr
	{
		public int Size;
		public int Capacity;
		public unsafe byte** Data;
	}

	unsafe partial class ImGui
	{
		public unsafe static void CheckSize()
		{
			 System.Diagnostics.Debug.Assert(12 == sizeof(ImGuiTableColumnSettings));
			 System.Diagnostics.Debug.Assert(8 == sizeof(ImGuiTableCellData));
			 System.Diagnostics.Debug.Assert(312 == sizeof(ImGuiViewportP));
			 System.Diagnostics.Debug.Assert(96 == sizeof(ImGuiViewport));
			 System.Diagnostics.Debug.Assert(56 == sizeof(ImDrawData));
			 System.Diagnostics.Debug.Assert(200 == sizeof(ImDrawList));
			 System.Diagnostics.Debug.Assert(56 == sizeof(ImDrawCmd));
			 System.Diagnostics.Debug.Assert(20 == sizeof(ImDrawVert));
			 System.Diagnostics.Debug.Assert(512 == sizeof(ImDrawListSharedData));
			 System.Diagnostics.Debug.Assert(112 == sizeof(ImFont));
			 System.Diagnostics.Debug.Assert(40 == sizeof(ImFontGlyph));
			 System.Diagnostics.Debug.Assert(1168 == sizeof(ImFontAtlas));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImFontPtr));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImFontAtlasCustomRect));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImFontAtlasCustomRect));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImFontConfig));
			 System.Diagnostics.Debug.Assert(136 == sizeof(ImFontConfig));
			 System.Diagnostics.Debug.Assert(8 == sizeof(ImFontBuilderIO));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImDrawCmdHeader));
			 System.Diagnostics.Debug.Assert(24 == sizeof(ImDrawListSplitter));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImDrawChannel));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImDrawChannel));
			 System.Diagnostics.Debug.Assert(1144 == sizeof(ImGuiWindow));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImGuiWindowClass));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiID));
			 System.Diagnostics.Debug.Assert(304 == sizeof(ImGuiWindowTempData));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImRect));
			 System.Diagnostics.Debug.Assert(36 == sizeof(ImGuiMenuColumns));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiWindowPtr));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiStorage));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiStoragePair));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiStoragePair));
			 System.Diagnostics.Debug.Assert(136 == sizeof(ImGuiOldColumns));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiOldColumnData));
			 System.Diagnostics.Debug.Assert(28 == sizeof(ImGuiOldColumnData));
			 System.Diagnostics.Debug.Assert(14 == sizeof(ImGuiStackSizes));
			 System.Diagnostics.Debug.Assert(4 == sizeof(ImVec2ih));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiOldColumns));
			 System.Diagnostics.Debug.Assert(24 == sizeof(ImGuiWindowDockStyle));
			 System.Diagnostics.Debug.Assert(192 == sizeof(ImGuiDockNode));
			 System.Diagnostics.Debug.Assert(152 == sizeof(ImGuiTabBar));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiTabItem));
			 System.Diagnostics.Debug.Assert(48 == sizeof(ImGuiTabItem));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiTextBuffer));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImDrawDataBuilder));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImDrawListPtr));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiPtrOrIndex));
			 System.Diagnostics.Debug.Assert(8 == sizeof(ImGuiShrinkWidthItem));
			 System.Diagnostics.Debug.Assert(8 == sizeof(ImGuiDataTypeTempStorage));
			 System.Diagnostics.Debug.Assert(24 == sizeof(StbTexteditRow));
			 System.Diagnostics.Debug.Assert(3628 == sizeof(STB_TexteditState));
			 System.Diagnostics.Debug.Assert(3596 == sizeof(StbUndoState));
			 System.Diagnostics.Debug.Assert(16 == sizeof(StbUndoRecord));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImGuiWindowSettings));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiTableSettings));
			 System.Diagnostics.Debug.Assert(104 == sizeof(ImGuiTableColumn));
			 System.Diagnostics.Debug.Assert(600 == sizeof(ImGuiTable));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImSpan_ImGuiTableColumn));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImSpan_ImGuiTableColumnIdx));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImSpan_ImGuiTableCellData));
			 System.Diagnostics.Debug.Assert(12 == sizeof(ImGuiTableColumnSortSpecs));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiTableColumnSortSpecs));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiTableSortSpecs));
			 System.Diagnostics.Debug.Assert(12 == sizeof(ImGuiStyleMod));
			 System.Diagnostics.Debug.Assert(72 == sizeof(ImGuiSettingsHandler));
			 System.Diagnostics.Debug.Assert(16552 == sizeof(ImGuiContext));
			 System.Diagnostics.Debug.Assert(5456 == sizeof(ImGuiIO));
			 System.Diagnostics.Debug.Assert(224 == sizeof(ImGuiPlatformIO));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiPlatformMonitor));
			 System.Diagnostics.Debug.Assert(36 == sizeof(ImGuiPlatformMonitor));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiViewportPtr));
			 System.Diagnostics.Debug.Assert(1076 == sizeof(ImGuiStyle));
			 System.Diagnostics.Debug.Assert(152 == sizeof(ImGuiNextWindowData));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImGuiSizeCallbackData));
			 System.Diagnostics.Debug.Assert(20 == sizeof(ImGuiNextItemData));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiColorMod));
			 System.Diagnostics.Debug.Assert(20 == sizeof(ImGuiColorMod));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiStyleMod));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiItemFlags));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiGroupData));
			 System.Diagnostics.Debug.Assert(48 == sizeof(ImGuiGroupData));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiPopupData));
			 System.Diagnostics.Debug.Assert(48 == sizeof(ImGuiPopupData));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiViewportPPtr));
			 System.Diagnostics.Debug.Assert(48 == sizeof(ImGuiNavMoveResult));
			 System.Diagnostics.Debug.Assert(64 == sizeof(ImGuiPayload));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_unsigned_char));
			 System.Diagnostics.Debug.Assert(40 == sizeof(ImPool_ImGuiTable));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiTable));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiPtrOrIndex));
			 System.Diagnostics.Debug.Assert(40 == sizeof(ImPool_ImGuiTabBar));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiTabBar));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiShrinkWidthItem));
			 System.Diagnostics.Debug.Assert(3736 == sizeof(ImGuiInputTextState));
			 System.Diagnostics.Debug.Assert(56 == sizeof(ImGuiInputTextCallbackData));
			 System.Diagnostics.Debug.Assert(56 == sizeof(ImGuiDockContext));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiDockRequest));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiDockNodeSettings));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiSettingsHandler));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImChunkStream_ImGuiWindowSettings));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiWindowSettings));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImChunkStream_ImGuiTableSettings));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiTableSettings));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiContextHook));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImGuiContextHook));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiMetricsConfig));
			 System.Diagnostics.Debug.Assert(40 == sizeof(ImGuiLastItemDataBackup));
			 System.Diagnostics.Debug.Assert(32 == sizeof(ImGuiDataTypeInfo));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImBitVector));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImU32));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImGuiTextRange));
			 System.Diagnostics.Debug.Assert(280 == sizeof(ImGuiTextFilter));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_ImGuiTextRange));
			 System.Diagnostics.Debug.Assert(4 == sizeof(ImGuiOnceUponAFrame));
			 System.Diagnostics.Debug.Assert(28 == sizeof(ImGuiListClipper));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImFontGlyphRangesBuilder));
			 System.Diagnostics.Debug.Assert(16 == sizeof(ImVector_const_charPtr));
		}
	}
}
